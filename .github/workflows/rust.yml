on:
  push:
    branches: [ "main" ]
    tags: ["v*.*.*"]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  MACOSX_DEPLOYMENT_TARGET: '11.0'

jobs:
  build:
    name: Build (${{ matrix.platform.os-name }})
    runs-on: ${{ matrix.platform.runs-on }}
    strategy:
      matrix:
        platform:
          - os-name: Linux-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            command: both

          - os-name: Linux-arm64
            runs-on: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            command: both

          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
            command: both

          - os-name: Windows-arm64
            runs-on: windows-latest
            target: aarch64-pc-windows-msvc
            command: build

          - os-name: macOS-x86_64
            runs-on: macos-latest
            target: x86_64-apple-darwin
            command: both

          - os-name: macOS-arm64
            runs-on: macos-latest
            target: aarch64-apple-darwin
            command: both

    steps:
      - uses: actions/checkout@v4

      - name: Build
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --all --release"

      - name: Store command line tool
        uses: actions/upload-artifact@v4
        with:
          name: rdfu-${{ matrix.platform.os-name }}
          path: |
            target/${{ matrix.platform.target }}/release/rdfu*
            !target/${{ matrix.platform.target }}/release/rdfu.d
            !target/${{ matrix.platform.target }}/release/rdfu.pdb

      - name: Package library
        shell: bash
        env:
          TARGET: ${{ matrix.platform.target }}
        run: ./package.sh $TARGET "target/$TARGET"

      - name: Store library
        uses: actions/upload-artifact@v4
        with:
          name: library-${{ matrix.platform.os-name }}
          path: rs_dfu-*.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir release-assets
          
          # CLI tools with simplified names
          cp artifacts/rdfu-Linux-x86_64/rdfu release-assets/rdfu-linux-x86_64
          cp artifacts/rdfu-Linux-arm64/rdfu release-assets/rdfu-linux-arm64
          cp artifacts/rdfu-Windows-x86_64/rdfu.exe release-assets/rdfu-windows-x86_64.exe
          cp artifacts/rdfu-Windows-arm64/rdfu.exe release-assets/rdfu-windows-arm64.exe
          cp artifacts/rdfu-macOS-x86_64/rdfu release-assets/rdfu-macos-x86_64
          cp artifacts/rdfu-macOS-arm64/rdfu release-assets/rdfu-macos-arm64
          
          # Libraries with original names (preserving the full Rust target triple)
          find artifacts/library-Linux-x86_64 -name "*.tar.gz" -exec cp {} release-assets/ \;
          find artifacts/library-Linux-arm64 -name "*.tar.gz" -exec cp {} release-assets/ \;
          find artifacts/library-Windows-x86_64 -name "*.tar.gz" -exec cp {} release-assets/ \;
          find artifacts/library-Windows-arm64 -name "*.tar.gz" -exec cp {} release-assets/ \;
          find artifacts/library-macOS-x86_64 -name "*.tar.gz" -exec cp {} release-assets/ \;
          find artifacts/library-macOS-arm64 -name "*.tar.gz" -exec cp {} release-assets/ \;

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          generate_release_notes: true
          files: release-assets/*
